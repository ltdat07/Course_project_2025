# reports.py

import pandas as pd
from datetime import datetime, timedelta
import logging
from excel_manager import ExcelManager
from decorators import log_exceptions
import config

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä ExcelManager
excel_manager = ExcelManager(config.settings.EXCEL_FILE)

@log_exceptions
def generate_report(sheet_move: str, sheet_price: str, date_column: str,
                    quantity_column: str, days: int, report_title: str) -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á—ë—Ç –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ `days` –¥–Ω–µ–π –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.
    """
    # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–≤–∏–∂–µ–Ω–∏–∏ –∏ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç
    df_move = excel_manager.read_sheet_as_df(sheet_move)
    df_price = excel_manager.read_sheet_as_df(sheet_price)
    
    # –ü—Ä–∏–≤–æ–¥–∏–º –∫–æ–ª–æ–Ω–∫—É —Å –¥–∞—Ç–æ–π –∫ —Ñ–æ—Ä–º–∞—Ç—É datetime
    df_move[date_column] = pd.to_datetime(df_move[date_column], dayfirst=True, errors='coerce')
    
    current_date = datetime.today()
    delta = timedelta(days=days)
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –¥–∞—Ç–µ: —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –∏ –¥–∞—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ delta
    df_filtered = df_move[current_date - df_move[date_column] <= delta]
    if df_filtered.empty:
        return f"üö´ <i>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {days} –¥–Ω–µ–π</i>"
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–º –ø–æ –ø–æ–ª—é "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
    df_merged = pd.merge(df_filtered, df_price, how='left', on='–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞')
    df_merged['–°—Ç–æ–∏–º–æ—Å—Ç—å'] = df_merged['–°—Ç–æ–∏–º–æ—Å—Ç—å'].fillna(0)
    df_merged['–°—É–º–º–∞'] = df_merged['–°—Ç–æ–∏–º–æ—Å—Ç—å'] * df_merged[quantity_column]
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–æ–≤–∞—Ä—É –∏ —Å—É–º–º–∏—Ä—É–µ–º
    df_report = df_merged[['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', quantity_column, '–°—É–º–º–∞']].groupby('–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', as_index=False).sum()
    df_report[quantity_column] = df_report[quantity_column].fillna(0)
    df_report['–°—É–º–º–∞'] = df_report['–°—É–º–º–∞'].fillna(0)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ –æ—Ç—á—ë—Ç–∞
    report_lines = [
        f"üîπ <b>{row['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞']}</b> ‚Äî <code>{int(row[quantity_column])} —à—Ç.</code> (<i>{int(row['–°—É–º–º–∞'])} —Ä—É–±.</i>)"
        for _, row in df_report.iterrows() if int(row[quantity_column]) > 0
    ]
    return f"üì¶ <b>{report_title} –∑–∞ {days} –¥–Ω–µ–π:</b>\n\n" + "\n".join(report_lines)

def generate_stock_report(days: int, operation: str) -> str:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞ –ø–æ —Å–∫–ª–∞–¥—É –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏ "delivery" (–ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è) –∏–ª–∏
    "shipment" (–æ—Ç–≥—Ä—É–∑–∫–∏) –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ `days` –¥–Ω–µ–π.

    :param days: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –≤—ã–±–æ—Ä–∫–∏.
    :param operation: –¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏: "delivery" –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–π, "shipment" –¥–ª—è –æ—Ç–≥—Ä—É–∑–æ–∫.
    :return: –°—Ç—Ä–æ–∫–∞ —Å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –æ—Ç—á—ë—Ç–æ–º.
    """
    if operation == "delivery":
        quantity_column = "–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ"
        report_title = "–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è"
    elif operation == "shipment":
        quantity_column = "–û—Ç–≥—Ä—É–∑–∫–∞"
        report_title = "–û—Ç–≥—Ä—É–∑–∫–∏"
    else:
        return f"‚ùå –û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏ '{operation}'."
    
    return generate_report(
        sheet_move=config.settings.SHEET_MOVE,
        sheet_price=config.settings.SHEET_PRICE,
        date_column="–î–∞—Ç–∞",
        quantity_column=quantity_column,
        days=days,
        report_title=report_title
    )
